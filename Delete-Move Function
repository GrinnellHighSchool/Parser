import subprocess
import shutil
import os
import pwd

class Delete():

    def keywords():
        return ["delete", "remove", "erase"]
                   
    def help():
        print("Delete Files: Type (cancel) to exit or type (delete) to remove file.")
    
    def run(file_name):
        if os.path.exists(file_name) == True:
            response = input("Delete File: ")
            check = False
            while check == False:
                if response == "cancel":
                    print ("")
                    print ("Canceled")
                    check = True
                elif response == "delete":
                    shutil.move(file_name, "Trash")
                    print ("")
                    print ("File Removed")
                    check = True
                else:
                    print ("")
                    print ("Invalid Response: ")
                    print ("Type (delete) to remove file or type (cancel) to exit")
                    response = input("Delete File: " )
        else:
            return "File does not exsist"

class Move:
    
    def keywords():
        return ["move", "send"]
                   
    def help():
        print("Delete Files: Type (cancel) to exit or type (delete) to remove file.")
        
    def run(file_name):
        if os.path.exists(file_name) == True:
            response = input("Location: ")   # Asks the new location for file
            valid_reponses = ["Documents", "Desktop", "Downloads", "Trash"]
            while True:
                directory = ["/Users/" + pwd.getpwuid(os.getuid())[ 0 ] + "/"]
                for location in valid_reponses: # Checks if location is valid
                    if response == location:
                        directory.append(location)
                        file = ''.join(directory[0:len(directory)])
                        shutil.move(file_name, file)
                        print ("")
                        return ("File Moved")                   
                print ("")
                print ("Invalid Location: ")
                response = input("Location: " )
        else:
            return "File does not exsist"

        

handler_lst = ["Move", "Delete"]

def parser():
    print('\n','Enter command below:')
    command = str(input())
    command_lst = command.split()
    try:
        keyword = command_lst[0]
    except:
        keyword = ''
    file_name = ''
    for word in command_lst[1:]:
        file_name += word + ' '
    file_name = file_name[:-1]
    
    for handler in handler_lst:
        if keyword in eval(handler).keywords():
            eval(handler).run(file_name)
            
    parser()
    
parser()
