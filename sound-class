#Calvin Dreesman
#Music test
import pygame
import time

WIDTH = 300
HEIGHT = 300
FPS = 5
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

currentsong = "currentsong" + str(123)

pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Music Player")
clock = pygame.time.Clock()
#For testing without a search function input your file directory for sounds
#It works for .ogg, .wav, and .mp3
#Will test more later
z = "/Users/dreescal/Music/iTunes/iTunes Media/Music/Unknown Artist/Unknown Album/Catch 22 -Riding the Fourth wave.mp3"
#Testing for input from search function


class Musicplayer():
    
    def __init__(self):
        directory = "/Users/dreescal/Music/iTunes/iTunes Media/Music/Unknown Artist/Unknown Album/Catch 22 -Riding the Fourth wave.mp3"
        Musicplayer.play(directory)

    def keywords(self):
        keywords = [play, start, player, sound, music]

    def help(self):
        return "hello"

    def musicname():
        return "hello"

    def play(directory):
#        pygame.init()
#        pygame.mixer.init()
        yeslibrary = ["yes", "Yes"]
        nolibrary = ["no", "No"]
        playthis = directory
        loop = input("Loop? Yes or No ")

#This was used for manual input. No longer 100% necessary.
#    playthis = input("Give directory name ")
        pygame.mixer.music.load(playthis)
        
        pygame.mixer.music.set_volume(.5)

        if loop in yeslibrary:
            pygame.mixer.music.play(loops=-1)
        else:
            pygame.mixer.music.play(loops=0)

    def functions(self):
        keypress = pygame.key.get_pressed()
        if keypress[pygame.K_p]:
            pygame.mixer.music.pause()
        if keypress[pygame.K_u]:
            pygame.mixer.music.unpause()
        if keypress[pygame.K_q]:
            pygame.mixer.music.queue()
        if keypress[pygame.K_r]:
            pygame.mixer.music.rewind()

def draw_text(surf, text, size, x, y):
    font = pygame.font.SysFont('monospace', 25)
    text_surface = font.render(text, True, BLACK)
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)

Musicplayer()
playing = True

while playing:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    screen.fill(WHITE)
    draw_text(screen, str(currentsong), 20, WIDTH/2, HEIGHT/2)
    pygame.display.flip()



pygame.quit()

#Going to be playing with this so the program will pause for the length
#of the song
        
#    time.sleep(10)

#This is will stop the program from hanging and fix any sounds not playing

#    pygame.quit()

#/Users/dreescal/Music/iTunes/iTunes Media/Music/Unknown Artist/Unknown Album/Watch out watch out - Randy Orton.mp3
#/Users/dreescal/Documents/sounds/shoot.wav
#/Users/dreescal/Documents/sounds/soundonly.ogg

